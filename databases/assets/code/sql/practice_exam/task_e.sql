CREATE TABLE PROGRAMS (
  ID INT PRIMARY KEY,
  NAME TEXT
);

CREATE TABLE COURSES (
  ID INT PRIMARY KEY,
  NAME TEXT,
  INSTRUCTOR TEXT
);

CREATE TABLE STUDENTS (
  ID INT PRIMARY KEY,
  NAME TEXT,
  NUM INT,
  PROGRAM_ID INT,
  JOIN_YEAR INT,
  FOREIGN KEY C_FK_STUDENT_PROGRAM (PROGRAM_ID)
  REFERENCES PROGRAMS(ID);
);

CREATE TABLE PROGRAM_HAS_COURSE (
  PROGRAM_ID INT,
  COURSE_ID INT,
  PRIMARY KEY(PROGRAM_ID, COURSE_ID),
  FOREIGN KEY C_FK_PROGRAM_HAS_COURSE_PROGRAM (PROGRAM_ID)
  REFERENCES PROGRAMS(ID),
  FOREIGN KEY C_FK_PROGRAM_HAS_COURSE_COURSE (COURSE_ID)
  REFERENCES COURSES(ID)
);

CREATE TABLE STUDENT_REGISTERED_FOR_COURSE (
  ID INT PRIMARY KEY,
  STUDENT_ID INT,
  COURSE_ID INT,
  DATE DATE,
  GRADE INT,
  FOREIGN KEY C_FK_STUDENT_REGISTERED_FOR_COURSE_STUDENT (STUDENT_ID)
  REFERENCES STUDENTS(ID),
  FOREIGN KEY C_FK_STUDENT_REGISTERED_FOR_COURSE_COURSE(COURSE_ID)
  REFERENCES COURSES(ID)
);


SELECT
  s.NAME,
  c.NAME,
  src.DATE
FROM
  STUDENT_REGISTERED_FOR_COURSE src
LEFT JOIN STUDENT s ON s.ID = src.STUDENT_ID
LEFT JOIN COURSES c ON c.ID = src.COURSE_ID;

SELECT
  s.NAME,
  c.NAME,
  src.GRADE
FROM
  STUDENT_REGISTERED_FOR_COURSE src
LEFT JOIN STUDENT s ON s.ID = src.STUDENT_ID
LEFT JOIN COURSES c ON c.ID = src.COURSE_ID;

SELECT
  p.NAME,
  COUNT(s.ID)
FROM PROGRAMS p
LEFT JOIN STUDENTS s ON s.PROGRAM_ID = p.ID
GROUP BY p.NAME


SELECT 
  NAME,
  AVG(NO_OF_STUDENTS)
FROM
(
SELECT
  p.NAME NAME,
  s.JOIN_YEAR JOIN_YEAR,
  COUNT(s.ID) NO_OF_STUDENTS
FROM PROGRAMS p
LEFT JOIN STUDENTS s ON s.PROGRAM_ID = p.ID
GROUP BY p.NAME, s.JOIN_YEAR
)
GROUP BY NAME;
